(()=>{"use strict";let t=[],e={};let n=()=>{delete document.documentElement.dataset.disablefont},i=()=>{document.documentElement.dataset.disablefont=""};chrome.runtime.onMessage.addListener((a,o,s)=>{a.pageLoad&&delete e[o.tab.id],a.runTypeX&&async function(){let a=await chrome.tabs.query({active:!0,currentWindow:!0}),{extensionActive:o}=await chrome.storage.local.get("extensionActive");const s=a[0];await async function(){let{fonts:e,files:n,blacklist:i}=await chrome.storage.local.get(["fonts","files","blacklist"]);t=[];const a=(()=>{let t="";for(const e of i)t+=`:not(${e})`;return t})();for(const i of e){const e=[],o=[];let s=i.name,c="";for(const t of i.selectors)e.push(`html:not([data-disablefont]) ${t}${a}`);let r=!1;if(i.axes&&Object.entries(i.axes).length?r=i.axes:i.file in n&&(r=n[i.file].axes),r&&!i.inherit){for(const t in r)o.push(`'${r[t].id}' ${r[t].value}`);s=i.name+i.id}i.file in n&&(c+=`\n                            @font-face {\n                                font-family: '${s}';\n                                src: url('${n[i.file].file}');\n                                font-weight: 100 900;\n                                font-stretch: 50% 200%;\n                            }`);const l=`'${s}', ${i.fallback}`;c+=`\n                        ${e.join(",")} {\n                            font-family: ${l} !important;\n                            ${o.length?`font-variation-settings: ${o.join(",")};`:""}\n                            ${i.css}\n                        }`,t.push(c)}}(),await async function(a){let{extensionActive:o}=await chrome.storage.local.get("extensionActive"),s=t.join("\n");o&&await async function(t,n){if(t in e){if(e[t]==n)return;await chrome.scripting.removeCSS({target:{tabId:t},css:e[t]})}await chrome.scripting.insertCSS({target:{tabId:t},css:n}),e[t]=n}(a,s),chrome.scripting.executeScript({target:{tabId:a},func:o?n:i})}(s.id)}()})})();